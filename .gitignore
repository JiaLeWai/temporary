#import <Foundation/Foundation.h>

#import <objc/Object.h>

@interface Integer : NSObject {
    int integer;
}

-(int)integer;
-(int)integer:(int) _integer;
@end

@implementation Integer
-(int)integer {
    return integer;
}

-(int)integer:(int) _integer {
    integer = _integer;
    return self;
}
@end

@interface Integer (Arithmetic)
-(id) add:(Integer *) addend;
-(id) sub:(Integer *) subtrahend;
@end


@implementation Integer (Arithmetic)
-(id) add:(Integer *) addend {
    return[self integer: [self integer]+[addend integer]];
}

-(id) sub:(Integer *) subtrahend {
    return [ self integer: [self integer]-[subtrahend integer]];
}
@end

@interface Integer (Display)
-(id) showstars;
-(id) showint;
@end

@implementation Integer(Display)
-(id) showstars {
    int i,x=[self integer];
    for (i=0;i<x;i++) {
        printf("*");
    }
    printf("\n");
    return self;
}

-(id) showint {
    printf("%d\n", [self integer]);
    return self;
}
@end
 







int main (int argc, const char * argv[])
{
    Integer * num1 = [Integer new], *num2 = [Integer new];
    int x;
    
    printf("Enter an integer: ");
    scanf("%d", &x);
    [num1 integer:x];
    [num1 showstars];
    
    printf("Enter an integer: ");
    scanf("%d", &x);
    [num2 integer:x];
    [num2 showstars];
    
    [num1 add:num2];
    [num1 showint];
    return 0;
    
    
}
